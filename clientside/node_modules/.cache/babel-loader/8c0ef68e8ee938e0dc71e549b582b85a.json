{"ast":null,"code":"import axios from \"axios\";\nconst urlapi = \"http://localhost:3002/products\";\nexport async function getProducts() {\n  // let info = await axios(urlapi, {mode:'no-cors'})\n  // return {type: \"GET_PRODUCTS\", payload:info.data}\n  let info = await fetch(urlapi, {\n    method: 'GET',\n    mode: 'no-cors'\n  }).then(async res => {\n    if (res.ok) {\n      return await res.json();\n    } else {\n      const errorMessage = await res.text();\n      return Promise.reject(new Error(errorMessage));\n    }\n  });\n  console.log(info);\n  return {\n    type: \"GET_PRODUCTS\",\n    payload: info.data\n  };\n}","map":{"version":3,"sources":["C:/Users/Justo/Desktop/itcrowd-challenge/clientside/src/actions/getProducts.js"],"names":["axios","urlapi","getProducts","info","fetch","method","mode","then","res","ok","json","errorMessage","text","Promise","reject","Error","console","log","type","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,MAAM,GAAG,gCAAf;AAEA,OAAO,eAAeC,WAAf,GAA4B;AAC/B;AACA;AACA,MAAIC,IAAI,GAAG,MAAMC,KAAK,CAACH,MAAD,EAAS;AAC3BI,IAAAA,MAAM,EAAE,KADmB;AAE3BC,IAAAA,IAAI,EAAG;AAFoB,GAAT,CAAL,CAIdC,IAJc,CAIT,MAAMC,GAAN,IAAa;AACf,QAAGA,GAAG,CAACC,EAAP,EAAU;AACR,aAAO,MAAMD,GAAG,CAACE,IAAJ,EAAb;AACD,KAFD,MAEO;AACL,YAAMC,YAAY,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAA3B;AACA,aAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAUJ,YAAV,CAAf,CAAP;AACD;AACN,GAXgB,CAAjB;AAYAK,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,SAAO;AAACe,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAChB,IAAI,CAACiB;AAApC,GAAP;AACH","sourcesContent":["import axios from \"axios\";\r\nconst urlapi = \"http://localhost:3002/products\";\r\n\r\nexport async function getProducts(){\r\n    // let info = await axios(urlapi, {mode:'no-cors'})\r\n    // return {type: \"GET_PRODUCTS\", payload:info.data}\r\n    let info = await fetch(urlapi, {\r\n        method: 'GET',\r\n        mode:  'no-cors'\r\n      })\r\n      .then(async res => {\r\n          if(res.ok){\r\n            return await res.json()\r\n          } else {\r\n            const errorMessage = await res.text()\r\n            return Promise.reject(new Error(errorMessage))\r\n          }\r\n    })\r\n    console.log(info)\r\n    return {type: \"GET_PRODUCTS\", payload:info.data}\r\n}"]},"metadata":{},"sourceType":"module"}